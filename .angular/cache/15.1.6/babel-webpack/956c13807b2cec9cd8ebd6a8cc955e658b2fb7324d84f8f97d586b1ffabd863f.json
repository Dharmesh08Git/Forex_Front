{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nimport * as i2 from \"./alert.service\";\nimport * as i3 from \"./auth.service\";\nexport class CustomerService {\n  constructor(api, alert, auth) {\n    this.api = api;\n    this.alert = alert;\n    this.auth = auth;\n  }\n  getMyBank() {\n    const user = this.auth.getUserDetails();\n    return this.api.get(`/bank-details/${user.usersId}`);\n  }\n  sendMoney(payload) {\n    this.api.post('/transaction/save', payload).subscribe(this.alert.apiSuccess, this.alert.apiFail);\n  }\n  getMyTransactions() {\n    const userId = this.auth.getUserDetails()?.usersId;\n    return this.api.get(`/transaction/byUserId/${userId}`);\n  }\n  resetPassword(payload) {\n    this.api.put(`/user/reset-password`, payload).subscribe(this.alert.apiSuccess, this.alert.apiFail);\n  }\n}\nCustomerService.ɵfac = function CustomerService_Factory(t) {\n  return new (t || CustomerService)(i0.ɵɵinject(i1.ApiService), i0.ɵɵinject(i2.AlertService), i0.ɵɵinject(i3.AuthService));\n};\nCustomerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CustomerService,\n  factory: CustomerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,eAAe;EAE1BC,YACUC,GAAe,EACfC,KAAmB,EACnBC,IAAiB;IAFjB,QAAG,GAAHF,GAAG;IACH,UAAK,GAALC,KAAK;IACL,SAAI,GAAJC,IAAI;EACV;EAEJC,SAAS;IACP,MAAMC,IAAI,GAAG,IAAI,CAACF,IAAI,CAACG,cAAc,EAAE;IACvC,OAAO,IAAI,CAACL,GAAG,CAACM,GAAG,CAAC,iBAAiBF,IAAI,CAACG,OAAO,EAAE,CAAC;EACtD;EAEAC,SAAS,CAACC,OAAY;IACpB,IAAI,CAACT,GAAG,CAACU,IAAI,CAAC,mBAAmB,EAAED,OAAO,CAAC,CAACE,SAAS,CAAC,IAAI,CAACV,KAAK,CAACW,UAAU,EAAE,IAAI,CAACX,KAAK,CAACY,OAAO,CAAC;EAClG;EAEAC,iBAAiB;IACf,MAAMC,MAAM,GAAG,IAAI,CAACb,IAAI,CAACG,cAAc,EAAE,EAAEE,OAAO;IAClD,OAAO,IAAI,CAACP,GAAG,CAACM,GAAG,CAAC,yBAAyBS,MAAM,EAAE,CAAC;EACxD;EAEAC,aAAa,CAACP,OAAY;IACxB,IAAI,CAACT,GAAG,CAACiB,GAAG,CAAC,sBAAsB,EAAER,OAAO,CAAC,CAACE,SAAS,CAAC,IAAI,CAACV,KAAK,CAACW,UAAU,EAAE,IAAI,CAACX,KAAK,CAACY,OAAO,CAAC;EACpG;;AAxBWf,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAoB,SAAfpB,eAAe;EAAAqB,YAFd;AAAM","names":["CustomerService","constructor","api","alert","auth","getMyBank","user","getUserDetails","get","usersId","sendMoney","payload","post","subscribe","apiSuccess","apiFail","getMyTransactions","userId","resetPassword","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\DTHORGAV\\Downloads\\OneDrive - Capgemini\\Desktop\\OceanCaseStudy\\forex_front\\src\\app\\services\\customer.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { AlertService } from './alert.service';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  constructor(\n    private api: ApiService,\n    private alert: AlertService,\n    private auth: AuthService\n  ) { }\n\n  getMyBank() {\n    const user = this.auth.getUserDetails();\n    return this.api.get(`/bank-details/${user.usersId}`);\n  }\n\n  sendMoney(payload: any) {\n    this.api.post('/transaction/save', payload).subscribe(this.alert.apiSuccess, this.alert.apiFail);\n  }\n\n  getMyTransactions() {\n    const userId = this.auth.getUserDetails()?.usersId;\n    return this.api.get(`/transaction/byUserId/${userId}`);\n  }\n\n  resetPassword(payload: any) {\n    this.api.put(`/user/reset-password`, payload).subscribe(this.alert.apiSuccess, this.alert.apiFail);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}