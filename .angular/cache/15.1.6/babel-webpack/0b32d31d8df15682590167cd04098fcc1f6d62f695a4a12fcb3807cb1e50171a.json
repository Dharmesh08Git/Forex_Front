{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"src/app/services/admin.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction AdminAddBankAccountPageComponent_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"uppercase\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r2 == null ? null : item_r2.usersId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(2, 3, item_r2 == null ? null : item_r2.name), \" - \", item_r2 == null ? null : item_r2.email, \"\");\n  }\n}\nexport class AdminAddBankAccountPageComponent {\n  constructor(auth, admin) {\n    this.auth = auth;\n    this.admin = admin;\n    this.userList = [];\n    this.selectedUser = {\n      name: ''\n    };\n  }\n  ngOnInit() {\n    this.admin.getUsers().subscribe(res => {\n      this.userList = res || [];\n    });\n  }\n  onSubmit(ngForm) {\n    const credentials = ngForm.form.value;\n    credentials.accountHolderName = this.selectedUser?.name;\n    this.admin.addBankAccount(credentials);\n    ngForm.resetForm();\n  }\n  onUserSelect(userId) {\n    this.selectedUser = {\n      ...this.userList.filter(item => item?.usersId == userId)[0]\n    };\n    console.log(this.selectedUser);\n  }\n}\nAdminAddBankAccountPageComponent.ɵfac = function AdminAddBankAccountPageComponent_Factory(t) {\n  return new (t || AdminAddBankAccountPageComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.AdminService));\n};\nAdminAddBankAccountPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminAddBankAccountPageComponent,\n  selectors: [[\"app-admin-add-bank-account-page\"]],\n  decls: 49,\n  vars: 5,\n  consts: [[1, \"login_page\"], [1, \"cantainer\"], [1, \"row\"], [1, \"col-md-8\", \"offset-md-2\"], [1, \"card\"], [3, \"noValidate\", \"ngSubmit\"], [\"registerForm\", \"ngForm\"], [1, \"col-12\", \"mt-3\"], [1, \"form-group\"], [\"ngModel\", \"\", \"name\", \"userId\", \"required\", \"\", 1, \"form-control\", 3, \"change\"], [\"value\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-6\", \"mt-3\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"accountHolderName\", \"required\", \"\", \"readonly\", \"\", 1, \"form-control\", 3, \"value\"], [\"type\", \"text\", \"step\", \"0.01\", \"ngModel\", \"\", \"name\", \"bankName\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"number\", \"ngModel\", \"\", \"name\", \"accountNumber\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"number\", \"ngModel\", \"\", \"name\", \"contactnumber\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"ifscCode\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-primary\", \"mt-3\"], [\"type\", \"reset\", 1, \"btn\", \"btn-outline-secondary\", \"mt-3\", \"ms-2\"], [3, \"value\"]],\n  template: function AdminAddBankAccountPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h3\");\n      i0.ɵɵtext(6, \"Add Bank Account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"hr\");\n      i0.ɵɵelementStart(8, \"form\", 5, 6);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminAddBankAccountPageComponent_Template_form_ngSubmit_8_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(9);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(10, \"div\", 2)(11, \"div\", 7)(12, \"div\", 8)(13, \"label\");\n      i0.ɵɵtext(14, \"Select User\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"select\", 9);\n      i0.ɵɵlistener(\"change\", function AdminAddBankAccountPageComponent_Template_select_change_15_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(9);\n        return i0.ɵɵresetView(ctx.onUserSelect(_r0.form.value.userId));\n      });\n      i0.ɵɵelementStart(16, \"option\", 10);\n      i0.ɵɵtext(17, \"SELECT USER\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(18, AdminAddBankAccountPageComponent_option_18_Template, 3, 5, \"option\", 11);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 12)(20, \"div\", 8)(21, \"label\");\n      i0.ɵɵtext(22, \"Account Holder Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 13);\n      i0.ɵɵpipe(24, \"uppercase\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 12)(26, \"div\", 8)(27, \"label\");\n      i0.ɵɵtext(28, \"Bank Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\", 12)(31, \"div\", 8)(32, \"label\");\n      i0.ɵɵtext(33, \"Account Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(34, \"input\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"div\", 12)(36, \"div\", 8)(37, \"label\");\n      i0.ɵɵtext(38, \"Contact number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"input\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(40, \"div\", 12)(41, \"div\", 8)(42, \"label\");\n      i0.ɵɵtext(43, \"IFSC Code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(44, \"input\", 17);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(45, \"button\", 18);\n      i0.ɵɵtext(46, \" Submit \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"button\", 19);\n      i0.ɵɵtext(48, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"noValidate\", false);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.userList);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"value\", i0.ɵɵpipeBind1(24, 3, ctx.selectedUser.name));\n    }\n  },\n  dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i3.UpperCasePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAiBwCA,kCAA8D;IAAAA,YAEzC;;IAAAA,iBAAS;;;;IAFQA,gEAAuB;IAACA,eAEzC;IAFyCA,yIAEzC;;;ACT7D,OAAM,MAAOC,gCAAgC;EAM3CC,YACUC,IAAiB,EACjBC,KAAmB;IADnB,SAAI,GAAJD,IAAI;IACJ,UAAK,GAALC,KAAK;IAPf,aAAQ,GAAU,EAAE;IACpB,iBAAY,GAAQ;MAClBC,IAAI,EAAE;KACP;EAKG;EAGJC,QAAQ;IACN,IAAI,CAACF,KAAK,CAACG,QAAQ,EAAE,CAACC,SAAS,CAAEC,GAAQ,IAAI;MAC3C,IAAI,CAACC,QAAQ,GAAGD,GAAG,IAAI,EAAE;IAC3B,CAAC,CAAC;EACJ;EAEAE,QAAQ,CAACC,MAAc;IACrB,MAAMC,WAAW,GAAGD,MAAM,CAACE,IAAI,CAACC,KAAK;IACrCF,WAAW,CAACG,iBAAiB,GAAG,IAAI,CAACC,YAAY,EAAEZ,IAAI;IACvD,IAAI,CAACD,KAAK,CAACc,cAAc,CAACL,WAAW,CAAC;IACtCD,MAAM,CAACO,SAAS,EAAE;EACpB;EACAC,YAAY,CAACC,MAAW;IACtB,IAAI,CAACJ,YAAY,GAAG;MAAE,GAAG,IAAI,CAACP,QAAQ,CAACY,MAAM,CAACC,IAAI,IAAIA,IAAI,EAAEC,OAAO,IAAIH,MAAM,CAAC,CAAC,CAAC;IAAC,CAAE;IACnFI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,YAAY,CAAC;EAChC;;AA3BWhB,gCAAgC;mBAAhCA,gCAAgC;AAAA;AAAhCA,gCAAgC;QAAhCA,gCAAgC;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDV7C/B,8BAAwB;MAKAA,gCAAgB;MAAAA,iBAAK;MACzBA,qBAAM;MAENA,kCAAsF;MAAzDA;QAAAA;QAAA;QAAA,OAAYA,gCAAsB;MAAA,EAAC;MAE5DA,+BAAiB;MAGEA,4BAAW;MAAAA,iBAAQ;MAC1BA,kCACmC;MAD3BA;QAAAA;QAAA;QAAA,OAAUA,sDAA4C;MAAA,EAAC;MAE3DA,mCAA0B;MAAAA,4BAAW;MAAAA,iBAAS;MAC9CA,0FAE8B;MAClCA,iBAAS;MAGjBA,gCAAwB;MAETA,oCAAmB;MAAAA,iBAAQ;MAClCA,6BACyD;;MAC7DA,iBAAM;MAEVA,gCAAwB;MAETA,0BAAS;MAAAA,iBAAQ;MACxBA,6BACe;MACnBA,iBAAM;MAEVA,gCAAwB;MAETA,+BAAc;MAAAA,iBAAQ;MAC7BA,6BAAkF;MACtFA,iBAAM;MAEVA,gCAAwB;MAETA,+BAAc;MAAAA,iBAAQ;MAC7BA,6BAAkF;MACtFA,iBAAM;MAEVA,gCAAwB;MAETA,0BAAS;MAAAA,iBAAQ;MACxBA,6BAA2E;MAC/EA,iBAAM;MAKdA,mCAA2D;MACvDA,yBACJ;MAAAA,iBAAS;MACTA,mCAAiE;MAAAA,uBAAM;MAAAA,iBAAS;;;MArDnBA,eAAoB;MAApBA,kCAAoB;MASxCA,gBAAW;MAAXA,sCAAW;MASAA,eAAuC;MAAvCA,oEAAuC","names":["i0","AdminAddBankAccountPageComponent","constructor","auth","admin","name","ngOnInit","getUsers","subscribe","res","userList","onSubmit","ngForm","credentials","form","value","accountHolderName","selectedUser","addBankAccount","resetForm","onUserSelect","userId","filter","item","usersId","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\DTHORGAV\\Downloads\\OneDrive - Capgemini\\Desktop\\OceanCaseStudy\\forex_front\\src\\app\\pages\\admin\\admin-add-bank-account-page\\admin-add-bank-account-page.component.html","C:\\Users\\DTHORGAV\\Downloads\\OneDrive - Capgemini\\Desktop\\OceanCaseStudy\\forex_front\\src\\app\\pages\\admin\\admin-add-bank-account-page\\admin-add-bank-account-page.component.ts"],"sourcesContent":["<div class=\"login_page\">\n    <div class=\"cantainer\">\n        <div class=\"row\">\n            <div class=\"col-md-8 offset-md-2\">\n                <div class=\"card\">\n                    <h3>Add Bank Account</h3>\n                    <hr />\n\n                    <form #registerForm=\"ngForm\" (ngSubmit)=\"onSubmit(registerForm)\" [noValidate]=\"false\">\n\n                        <div class=\"row\">\n                            <div class=\"col-12 mt-3\">\n                                <div class=\"form-group\">\n                                    <label>Select User</label>\n                                    <select (change)=\"onUserSelect(registerForm.form.value.userId)\" class=\"form-control\"\n                                        ngModel name=\"userId\" required>\n                                        <option value=\"\" disabled>SELECT USER</option>\n                                        <option *ngFor=\"let item of userList\" [value]=\"item?.usersId\">{{item?.name |\n                                            uppercase}}\n                                            - {{item?.email}}</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"col-6 mt-3\">\n                                <div class=\"form-group\">\n                                    <label>Account Holder Name</label>\n                                    <input type=\"text\" class=\"form-control\" [value]=\"selectedUser.name | uppercase\"\n                                        ngModel name=\"accountHolderName\" required readonly />\n                                </div>\n                            </div>\n                            <div class=\"col-6 mt-3\">\n                                <div class=\"form-group\">\n                                    <label>Bank Name</label>\n                                    <input type=\"text\" step=\"0.01\" class=\"form-control\" ngModel name=\"bankName\"\n                                        required />\n                                </div>\n                            </div>\n                            <div class=\"col-6 mt-3\">\n                                <div class=\"form-group\">\n                                    <label>Account Number</label>\n                                    <input type=\"number\" class=\"form-control\" ngModel name=\"accountNumber\" required />\n                                </div>\n                            </div>\n                            <div class=\"col-6 mt-3\">\n                                <div class=\"form-group\">\n                                    <label>Contact number</label>\n                                    <input type=\"number\" class=\"form-control\" ngModel name=\"contactnumber\" required />\n                                </div>\n                            </div>\n                            <div class=\"col-6 mt-3\">\n                                <div class=\"form-group\">\n                                    <label>IFSC Code</label>\n                                    <input type=\"text\" class=\"form-control\" ngModel name=\"ifscCode\" required />\n                                </div>\n                            </div>\n\n                        </div>\n\n                        <button type=\"submit\" class=\"btn btn-outline-primary mt-3\">\n                            Submit\n                        </button>\n                        <button type=\"reset\" class=\"btn btn-outline-secondary mt-3 ms-2\">Cancel</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-admin-add-bank-account-page',\n  templateUrl: './admin-add-bank-account-page.component.html',\n  styleUrls: ['./admin-add-bank-account-page.component.scss']\n})\nexport class AdminAddBankAccountPageComponent {\n  userList: any[] = [];\n  selectedUser: any = {\n    name: ''\n  }\n\n  constructor(\n    private auth: AuthService,\n    private admin: AdminService\n  ) { }\n\n\n  ngOnInit() {\n    this.admin.getUsers().subscribe((res: any) => {\n      this.userList = res || [];\n    });\n  }\n\n  onSubmit(ngForm: NgForm) {\n    const credentials = ngForm.form.value;\n    credentials.accountHolderName = this.selectedUser?.name;\n    this.admin.addBankAccount(credentials);\n    ngForm.resetForm();\n  }\n  onUserSelect(userId: any) {\n    this.selectedUser = { ...this.userList.filter(item => item?.usersId == userId)[0] };\n    console.log(this.selectedUser)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}