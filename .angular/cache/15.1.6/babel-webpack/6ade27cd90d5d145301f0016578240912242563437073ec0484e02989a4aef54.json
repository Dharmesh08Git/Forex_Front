{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.API_BASE_URL = 'http://localhost:8081';\n  }\n  post(uri, payload) {\n    return this.http.post(this.API_BASE_URL + uri, payload);\n  }\n  put(uri, payload) {\n    return this.http.put(this.API_BASE_URL + uri, payload);\n  }\n  get(uri) {\n    return this.http.get(this.API_BASE_URL + uri);\n  }\n  delete(uri) {\n    return this.http.delete(this.API_BASE_URL + uri);\n  }\n  baseUrl() {\n    return this.API_BASE_URL;\n  }\n  getHeader() {\n    const token = sessionStorage.getItem('SESSION_TOKEN');\n    const headers = new HttpHeaders({\n      'Authorization': token || ''\n    });\n    return {\n      headers: headers\n    };\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADhB,iBAAY,GAAW,uBAAuB;EACd;EAExCC,IAAI,CAACC,GAAW,EAAEC,OAAY;IAC5B,OAAO,IAAI,CAACH,IAAI,CAACC,IAAI,CAAC,IAAI,CAACG,YAAY,GAAGF,GAAG,EAAEC,OAAO,CAAC;EACzD;EACAE,GAAG,CAACH,GAAW,EAAEC,OAAY;IAC3B,OAAO,IAAI,CAACH,IAAI,CAACK,GAAG,CAAC,IAAI,CAACD,YAAY,GAAGF,GAAG,EAAEC,OAAO,CAAC;EACxD;EACAG,GAAG,CAACJ,GAAW;IACb,OAAO,IAAI,CAACF,IAAI,CAACM,GAAG,CAAC,IAAI,CAACF,YAAY,GAAGF,GAAG,CAAC;EAC/C;EACAK,MAAM,CAACL,GAAW;IAChB,OAAO,IAAI,CAACF,IAAI,CAACO,MAAM,CAAC,IAAI,CAACH,YAAY,GAAGF,GAAG,CAAC;EAClD;EACAM,OAAO;IACL,OAAO,IAAI,CAACJ,YAAY;EAC1B;EAGAK,SAAS;IACP,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC;IACrD,MAAMC,OAAO,GAAG,IAAIhB,WAAW,CAAC;MAC9B,eAAe,EAAEa,KAAK,IAAI;KAC3B,CAAC;IACF,OAAQ;MAAEG,OAAO,EAAEA;IAAO,CAAE;EAC9B;;AA5BWf,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAgB,SAAVhB,UAAU;EAAAiB,YAFT;AAAM","names":["HttpHeaders","ApiService","constructor","http","post","uri","payload","API_BASE_URL","put","get","delete","baseUrl","getHeader","token","sessionStorage","getItem","headers","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\DTHORGAV\\Downloads\\OneDrive - Capgemini\\Desktop\\OceanCaseStudy\\forex_front\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private API_BASE_URL: string = 'http://localhost:8081';\n  constructor(private http: HttpClient) { }\n\n  post(uri: string, payload: any) {\n    return this.http.post(this.API_BASE_URL + uri, payload);\n  }\n  put(uri: string, payload: any) {\n    return this.http.put(this.API_BASE_URL + uri, payload);\n  }\n  get(uri: string) {\n    return this.http.get(this.API_BASE_URL + uri);\n  }\n  delete(uri: string) {\n    return this.http.delete(this.API_BASE_URL + uri);\n  }\n  baseUrl() {\n    return this.API_BASE_URL;\n  }\n\n\n  getHeader() {\n    const token = sessionStorage.getItem('SESSION_TOKEN');\n    const headers = new HttpHeaders({\n      'Authorization': token || '',\n    });\n    return ({ headers: headers });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}